{"version":3,"sources":["colors.js","styles.js","Todo.js","App.js"],"names":["theme","styles","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","header","justifyContent","flexDirection","marginTop","btnText","fontSize","fontWeight","color","input","paddingVertical","borderRadius","marginVertical","toDo","marginBottom","alignItems","toDoText","editInput","marginRight","Todo","id","toDos","completeToDo","edit","editToDo","saveEditToDo","deleteToDo","useState","editText","setEditText","View","style","TextInput","onSubmitEditing","onChangeText","payload","returnKeyType","value","placeholder","text","TouchableOpacity","onPress","Feather","name","size","Text","completed","textDecoration","gap","App","working","setWorking","setEdit","setText","setToDos","useEffect","loadRender","travel","AsyncStorage","setItem","JSON","stringify","e","console","error","work","saveToDos","toSave","m","getItem","parse","t","addToDo","newToDos","Date","now","key","log","Platform","OS","confirm","Alert","alert","StatusBar","ScrollView","Object","keys","map"],"mappings":"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","file":"static/js/app.f781864f.chunk.js","sourcesContent":["export const theme = {\r\n  bg: \"black\",\r\n  gray: \"#333839\",\r\n  toDoBg: \"#5C5C60\",\r\n};\r\n","import { StyleSheet } from \"react-native\";\r\nimport { theme } from \"./colors\";\r\n\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.bg,\r\n    paddingHorizontal: 20,\r\n  },\r\n  header: {\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    marginTop: 100,\r\n  },\r\n  btnText: {\r\n    fontSize: 44,\r\n    fontWeight: \"600\",\r\n    color: \"white\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 30,\r\n    marginVertical: 20,\r\n    fontSize: 18,\r\n  },\r\n  toDo: {\r\n    backgroundColor: theme.toDoBg,\r\n    marginBottom: 10,\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 15,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  toDoText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n  },\r\n  editInput: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    marginRight: 12,\r\n  },\r\n});\r\n","import { StatusBar } from \"expo-status-bar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  ScrollView,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { theme } from \"./colors\";\r\nimport { styles } from \"./styles\";\r\n\r\nexport default function Todo({\r\n  id,\r\n  toDos,\r\n  completeToDo,\r\n  edit,\r\n  editToDo,\r\n  saveEditToDo,\r\n  deleteToDo,\r\n}) {\r\n  const [editText, setEditText] = useState(\"\");\r\n  const onChangeEditText = (payload) => setEditText(payload);\r\n  return (\r\n    <View style={styles.toDo}>\r\n      {id === edit ? (\r\n        <>\r\n          <TextInput\r\n            onSubmitEditing={() => saveEditToDo(id, editText)}\r\n            onChangeText={onChangeEditText}\r\n            returnKeyType=\"done\"\r\n            value={editText}\r\n            placeholder={toDos[id].text}\r\n            style={styles.editInput}\r\n          />\r\n          <TouchableOpacity onPress={() => saveEditToDo(id, editText)}>\r\n            <Feather name=\"save\" size={18} color={theme.gray} />\r\n          </TouchableOpacity>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Text\r\n            style={{\r\n              ...styles.toDoText,\r\n              ...(toDos[id].completed && {\r\n                color: theme.gray,\r\n                textDecoration: \"line-through\",\r\n              }),\r\n            }}\r\n          >\r\n            {toDos[id].text}\r\n          </Text>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              gap: 6,\r\n            }}\r\n          >\r\n            <TouchableOpacity onPress={() => completeToDo(id)}>\r\n              {toDos[id].completed ? (\r\n                <Feather name=\"check-square\" size={18} color={theme.gray} />\r\n              ) : (\r\n                <Feather name=\"square\" size={18} color={theme.gray} />\r\n              )}\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => editToDo(id)}>\r\n              <Feather name=\"edit-3\" size={18} color={theme.gray} />\r\n              {/* <Feather name=\"save\" size={18} color={theme.gray} /> */}\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => deleteToDo(id)}>\r\n              <Feather name=\"trash-2\" size={18} color={theme.gray} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n","import { StatusBar } from \"expo-status-bar\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { theme } from \"./colors\";\nimport { styles } from \"./styles\";\nimport Todo from \"./Todo\";\n\nconst MODE_STORAGE_KEY = \"@mode\";\nconst TODO_STORAGE_KEY = \"@toDos\";\n\nexport default function App() {\n  const [working, setWorking] = useState(true);\n  const [edit, setEdit] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [toDos, setToDos] = useState({});\n  useEffect(() => {\n    loadRender();\n  }, []);\n  const travel = async () => {\n    try {\n      setWorking(false);\n      await AsyncStorage.setItem(MODE_STORAGE_KEY, JSON.stringify(false));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const work = async () => {\n    try {\n      setWorking(true);\n      await AsyncStorage.setItem(MODE_STORAGE_KEY, JSON.stringify(true));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const onChangeText = (payload) => setText(payload);\n  const saveToDos = async (toSave) => {\n    try {\n      await AsyncStorage.setItem(TODO_STORAGE_KEY, JSON.stringify(toSave));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const loadRender = async () => {\n    try {\n      const m = await AsyncStorage.getItem(MODE_STORAGE_KEY);\n      setWorking(JSON.parse(m));\n      const t = await AsyncStorage.getItem(TODO_STORAGE_KEY);\n      setToDos(JSON.parse(t));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const addToDo = async () => {\n    try {\n      if (text === \"\") {\n        return;\n      }\n      const newToDos = {\n        ...toDos,\n        [Date.now()]: { text, working, completed: false },\n      };\n      setToDos(newToDos);\n      await saveToDos(newToDos);\n      setText(\"\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const completeToDo = async (key) => {\n    try {\n      const newToDos = { ...toDos };\n      newToDos[key].completed = !newToDos[key].completed;\n      setToDos(newToDos);\n      await saveToDos(newToDos);\n      console.log(newToDos);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const editToDo = (key) => {\n    setEdit(key);\n  };\n  const saveEditToDo = async (key, text) => {\n    try {\n      const newToDos = { ...toDos };\n      newToDos[key].text = text;\n      // console.log(newToDos);\n      setToDos(newToDos);\n      await saveToDos(newToDos);\n      setEdit(\"\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const deleteToDo = (key) => {\n    if (Platform.OS === \"web\") {\n      const ok = confirm(\"Do you want to delete this To Do?\");\n      if (ok) {\n        const newToDos = { ...toDos };\n        delete newToDos[key];\n        setToDos(newToDos);\n        saveToDos(newToDos);\n      }\n    } else {\n      Alert.alert(\"Delete To Do\", \"Are you sure?\", [\n        { text: \"Cancel\" },\n        {\n          text: \"I'm Sure\",\n          onPress: () => {\n            const newToDos = { ...toDos };\n            delete newToDos[key];\n            setToDos(newToDos);\n            saveToDos(newToDos);\n          },\n        },\n      ]);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"light\" />\n      <View style={styles.header}>\n        <TouchableOpacity onPress={work}>\n          <Text\n            style={{\n              ...styles.btnText,\n              color: working ? \"white\" : theme.gray,\n            }}\n          >\n            Work\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={travel}>\n          <Text\n            style={{\n              ...styles.btnText,\n              color: !working ? \"white\" : theme.gray,\n            }}\n          >\n            Travel\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <TextInput\n        onSubmitEditing={addToDo}\n        onChangeText={onChangeText}\n        returnKeyType=\"done\"\n        value={text}\n        placeholder={working ? \"Add a To Do\" : \"Where do you want to go?\"}\n        style={styles.input}\n      />\n      <ScrollView>\n        {toDos &&\n          Object.keys(toDos).map((key) =>\n            toDos[key].working === working ? (\n              <Todo\n                key={key}\n                id={key}\n                toDos={toDos}\n                completeToDo={completeToDo}\n                edit={edit}\n                editToDo={editToDo}\n                saveEditToDo={saveEditToDo}\n                deleteToDo={deleteToDo}\n              />\n            ) : null,\n          )}\n      </ScrollView>\n    </View>\n  );\n}\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: theme.bg,\n//     paddingHorizontal: 20,\n//   },\n//   header: {\n//     justifyContent: \"space-between\",\n//     flexDirection: \"row\",\n//     marginTop: 100,\n//   },\n//   btnText: {\n//     fontSize: 44,\n//     fontWeight: \"600\",\n//     color: \"white\",\n//   },\n//   input: {\n//     backgroundColor: \"white\",\n//     paddingVertical: 15,\n//     paddingHorizontal: 20,\n//     borderRadius: 30,\n//     marginVertical: 20,\n//     fontSize: 18,\n//   },\n//   toDo: {\n//     backgroundColor: theme.toDoBg,\n//     marginBottom: 10,\n//     paddingVertical: 20,\n//     paddingHorizontal: 20,\n//     borderRadius: 15,\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     justifyContent: \"space-between\",\n//   },\n//   toDoText: {\n//     color: \"white\",\n//     fontSize: 16,\n//     fontWeight: \"500\",\n//   },\n// });\n"],"sourceRoot":""}